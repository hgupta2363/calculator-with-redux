{"ast":null,"code":"import _slicedToArray from \"F:\\\\react\\\\confusion3\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\react\\\\confusion3\\\\src\\\\components\\\\menu component.js\";\nimport React, { Component, useState } from 'react';\nimport { Logger, ConsoleLogger } from 'react-console-logger';\nimport { Card, CardImg, CardImgOverlay, CardTitle } from 'reactstrap';\nconst myLogger = new Logger();\n\nconst onDishSelect = dish => {\n  this.setState = {\n    selectedDish: dish\n  };\n};\n\nconst renderDish = dish => {\n  if (dish != null) {\n    return React.createElement(\"card\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"cardImg\", {\n      width: \"100%\",\n      src: dish.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(\"cardBody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"dish.name\"), React.createElement(\"cardText\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"dish.description\")));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n  }\n};\n\nconst Menu = props => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        selecteDish = _useState2[0],\n        setDish = _useState2[1];\n\n  var menu = this.props.dishes.map(dish => {\n    return React.createElement(\"div\", {\n      className: \"col-3  mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Card, {\n      key: dish.id,\n      onClick: () => setDish(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      width: \"100%\",\n      src: dish.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(CardImgOverlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, dish.name))));\n  });\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, menu), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, this.renderDish(this.state.selectedDish))));\n};\n\nexport default Menu;","map":{"version":3,"sources":["F:\\react\\confusion3\\src\\components\\menu component.js"],"names":["React","Component","useState","Logger","ConsoleLogger","Card","CardImg","CardImgOverlay","CardTitle","myLogger","onDishSelect","dish","setState","selectedDish","renderDish","image","Menu","props","selecteDish","setDish","menu","dishes","map","id","name","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAAQC,MAAR,EAAgBC,aAAhB,QAAoC,sBAApC;AAEA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,cAAxB,EACGC,SADH,QACoB,YADpB;AAGG,MAAMC,QAAQ,GAAG,IAAIN,MAAJ,EAAjB;;AACD,MAAMO,YAAY,GAAEC,IAAD,IAAQ;AAEvB,OAAKC,QAAL,GAAc;AACXC,IAAAA,YAAY,EAACF;AADF,GAAd;AAGF,CALF;;AAMD,MAAMG,UAAU,GAAEH,IAAD,IAAQ;AACpB,MAAGA,IAAI,IAAE,IAAT,EACA;AACG,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG;AAAS,MAAA,KAAK,EAAC,MAAf;AAAsB,MAAA,GAAG,EAAEA,IAAI,CAACI,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACZ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADY,EAEZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFY,CALH,CAFF;AAaF,GAfD,MAiBA;AACG,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF;AACH,CArBH;;AAsBD,MAAMC,IAAI,GAAGC,KAAD,IACX;AAAA,oBAM6Bf,QAAQ,CAAC,IAAD,CANrC;AAAA;AAAA,QAMQgB,WANR;AAAA,QAMoBC,OANpB;;AAUD,MAAIC,IAAI,GAAE,KAAKH,KAAL,CAAWI,MAAX,CAAkBC,GAAlB,CAAuBX,IAAD,IAAQ;AACxC,WACG;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACY,EAAhB;AAAqB,MAAA,OAAO,EAAE,MAAKJ,OAAO,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,MAAf;AAAwB,MAAA,GAAG,EAAER,IAAI,CAACI,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGe,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYJ,IAAI,CAACa,IAAjB,CADJ,CAHf,CADA,CADH;AAqBC,GAtBS,CAAV;AAwBA,SAIG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,IADD,CADA,EAIA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,KAAKN,UAAL,CAAgB,KAAKW,KAAL,CAAWZ,YAA3B,CADD,CADA,CAJA,CAJH;AAkBE,CArDF;;AAuDC,eAAeG,IAAf","sourcesContent":["import React ,{Component ,useState } from 'react'\r\nimport {Logger, ConsoleLogger} from 'react-console-logger';\r\n\r\nimport { Card, CardImg, CardImgOverlay, \r\n   CardTitle } from 'reactstrap';\r\n\r\n   const myLogger = new Logger();\r\n  const onDishSelect=(dish)=>{\r\n \r\n      this.setState={\r\n         selectedDish:dish\r\n      }\r\n   }\r\n const renderDish=(dish)=>{\r\n      if(dish!=null)\r\n      {\r\n         return(\r\n  \r\n           <card>\r\n  \r\n              <cardImg width=\"100%\" src={dish.image}>\r\n              \r\n              </cardImg>\r\n              <cardBody>\r\n  <CardTitle>dish.name</CardTitle>\r\n  <cardText>dish.description</cardText>\r\n              </cardBody>\r\n           </card>\r\n         )\r\n      }\r\n      else\r\n      {\r\n         return(<div></div>)\r\n      }\r\n   }\r\nconst Menu =(props)=>\r\n {\r\n\r\n  \r\n     \r\n    \r\n\r\n  const [selecteDish,setDish]=useState(null)\r\n\r\n\r\n\r\nvar menu =this.props.dishes.map((dish)=>{\r\nreturn(\r\n   <div className=\"col-3  mt-5\">\r\n   <Card key={dish.id}  onClick={() =>setDish()}>\r\n  \r\n   <CardImg width=\"100%\"   src={dish.image}  />\r\n                  <CardImgOverlay>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                  </CardImgOverlay>\r\n\r\n\r\n\r\n      \r\n   </Card>\r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   </div>\r\n)\r\n})\r\n\r\nreturn(\r\n\r\n\r\n\r\n   <div className=\"container\">\r\n   <div className=\"row\">\r\n   {menu}\r\n   </div>\r\n   <div className=\"row\">\r\n   <div className=\"col-12\">\r\n   {this.renderDish(this.state.selectedDish)}\r\n   </div>\r\n   </div >\r\n   \r\n   </div>\r\n)\r\n\r\n\r\n }\r\n \r\n export default Menu"]},"metadata":{},"sourceType":"module"}