{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\confusion3\\\\src\\\\components\\\\menu component.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle } from 'reactstrap';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDish: null\n    };\n  }\n\n  onDishSelect(dish) {\n    this.setState = {\n      selectedDish: dish\n    };\n  }\n\n  renderDish(dish) {\n    if (dish != null) {\n      return React.createElement(\"card\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"cardImg\", {\n        width: \"100%\",\n        src: dish.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"cardBody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"dish.name\"), React.createElement(\"cardText\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"dish.description\")));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    var menu = this.props.dishes.map(dish => {\n      return React.createElement(\"div\", {\n        className: \"col-3  mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Card, {\n        key: dish.id,\n        onClick: () => this.onDishSelect(dish),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        width: \"100%\",\n        src: dish.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(CardImgOverlay, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, dish.name))));\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, menu), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.renderDish(this.state.selectedDish))));\n  }\n\n}\n\nexport default Menu;","map":{"version":3,"sources":["F:\\react\\confusion3\\src\\components\\menu component.js"],"names":["React","Component","Card","CardImg","CardImgOverlay","CardTitle","Menu","constructor","props","state","selectedDish","onDishSelect","dish","setState","renderDish","image","render","menu","dishes","map","id","name"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,cAAxB,EACGC,SADH,QACoB,YADpB;;AAIA,MAAMC,IAAN,SAAmBL,SAAnB,CACC;AACDM,EAAAA,WAAW,CAAEC,KAAF,EACT;AACG,UAAMA,KAAN;AAGH,SAAKC,KAAL,GAAW;AACRC,MAAAA,YAAY,EAAC;AADL,KAAX;AAID;;AAGAC,EAAAA,YAAY,CAACC,IAAD,EAAM;AACf,SAAKC,QAAL,GAAc;AACXH,MAAAA,YAAY,EAACE;AADF,KAAd;AAGF;;AACDE,EAAAA,UAAU,CAACF,IAAD,EAAM;AACb,QAAGA,IAAI,IAAE,IAAT,EACA;AACG,aAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG;AAAS,QAAA,KAAK,EAAC,MAAf;AAAsB,QAAA,GAAG,EAAEA,IAAI,CAACG,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFH,EAKG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACZ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADY,EAEZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFY,CALH,CAFF;AAaF,KAfD,MAiBA;AACG,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACF;AACH;;AAEFC,EAAAA,MAAM,GAAE;AACR,QAAIC,IAAI,GAAE,KAAKT,KAAL,CAAWU,MAAX,CAAkBC,GAAlB,CAAuBP,IAAD,IAAQ;AACxC,aACG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,IAAI,CAACQ,EAAhB;AAAqB,QAAA,OAAO,EAAE,MAAM,KAAKT,YAAL,CAAkBC,IAAlB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAC,MAAf;AAAwB,QAAA,GAAG,EAAEA,IAAI,CAACG,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGe,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYH,IAAI,CAACS,IAAjB,CADJ,CAHf,CADA,CADH;AAqBC,KAtBS,CAAV;AAwBA,WAIG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCJ,IADD,CADA,EAIA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKH,UAAL,CAAgB,KAAKL,KAAL,CAAWC,YAA3B,CADD,CADA,CAJA,CAJH;AAkBC;;AApFA;;AAuFA,eAAeJ,IAAf","sourcesContent":["import React ,{Component} from 'react'\r\n \r\nimport { Card, CardImg, CardImgOverlay, \r\n   CardTitle } from 'reactstrap';\r\n\r\n\r\nclass Menu extends Component\r\n {\r\nconstructor (props)\r\n  {\r\n     super(props)\r\n    \r\n\r\n  this.state={\r\n     selectedDish:null\r\n  }\r\n  \r\n}\r\n\r\n\r\n onDishSelect(dish){\r\n    this.setState={\r\n       selectedDish:dish\r\n    }\r\n }\r\n renderDish(dish){\r\n    if(dish!=null)\r\n    {\r\n       return(\r\n\r\n         <card>\r\n\r\n            <cardImg width=\"100%\" src={dish.image}>\r\n            \r\n            </cardImg>\r\n            <cardBody>\r\n<CardTitle>dish.name</CardTitle>\r\n<cardText>dish.description</cardText>\r\n            </cardBody>\r\n         </card>\r\n       )\r\n    }\r\n    else\r\n    {\r\n       return(<div></div>)\r\n    }\r\n }\r\n\r\nrender(){\r\nvar menu =this.props.dishes.map((dish)=>{\r\nreturn(\r\n   <div className=\"col-3  mt-5\">\r\n   <Card key={dish.id}  onClick={() => this.onDishSelect(dish)}>\r\n  \r\n   <CardImg width=\"100%\"   src={dish.image}  />\r\n                  <CardImgOverlay>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                  </CardImgOverlay>\r\n\r\n\r\n\r\n      \r\n   </Card>\r\n   \r\n   \r\n   \r\n   \r\n   \r\n   \r\n   </div>\r\n)\r\n})\r\n\r\nreturn(\r\n\r\n\r\n\r\n   <div className=\"container\">\r\n   <div className=\"row\">\r\n   {menu}\r\n   </div>\r\n   <div className=\"row\">\r\n   <div className=\"col-12\">\r\n   {this.renderDish(this.state.selectedDish)}\r\n   </div>\r\n   </div >\r\n   \r\n   </div>\r\n)\r\n\r\n\r\n}\r\n }\r\n \r\n export default Menu"]},"metadata":{},"sourceType":"module"}